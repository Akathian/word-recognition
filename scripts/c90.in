set seedVal 0
seed ${seedVal}
set saveTestRuns 0
set numEpochs 3000
set hiddenSize 100
set exampleFolder ./training_data/example_files/
set exampleSubFolder a
mkdir -p exampleFolder

addNet 		c90		-i 4.0 -t 5 	CONTINUOUS
addGroup 	Orth1	 	6 		INPUT
addGroup 	Orth2	 	6 		INPUT
addGroup 	Orth3	 	6 		INPUT
addGroup 	Hidden 		$hiddenSize 	IN_INTEGR
addGroup 	Semantic 	100 		OUTPUT IN_INTEGR
connectGroups 	{Orth1 Orth2 Orth3} Hidden
connectGroups 	{Hidden} Semantic -bidirectional
connectGroups 	{Semantic} Semantic
setLinkValues 	randMean	-1.7		-type bias
autoPlot
graphObj error

# loadExamples c90.ex -s train
loadExamples inputc90dominance.ex -s train
setObj train.graceTime 3.0
setObj train.minTime 4
setObj train.maxTime 4


setObj learningRate 0.005
setObj numUpdates 10000
setObj reportInterval 1
setObj targetRadius 0.1
setObj randRange 0.25
setObj testGroupCrit 0.5
setObj momentum 0.8
setObj pseudoExampleFreq 1

resetNet

proc outTarg {} {

        global f

        set gr {Semantic}
        set ty {output target}

        foreach t $ty {

                puts -nonewline $f  "[getObj net(0).currentExample.name] [getObj totalUpdates] [getObj net(0).currentTick] $t "
                foreach g $gr {
                        for {set u 0} {$u < [getObj $g.numUnits]} {incr u} {
                                puts -nonewline $f  "[getObj $g.unit($u).$t] "
                        }
                }
                puts $f ""
        }
}

set f ""

#### Function to save and test the network
proc saveTest {} {

        global f
        global seedVal
        global numEpochs
        global hiddenSize
        global exampleSubFolder
        global exampleParams
        global exampleFolder
        global saveTestRuns

        setObj postTickProc {outTarg}

        # Need to view units to be able to access the history arrays.
        viewUnits

        set modelFolderParams ${seedVal}seed_${hiddenSize}hid_${saveTestRuns}TestRuns_${numEpochs}UpdateEpoch_[getObj weightDecay]decay
        set modelParams ${seedVal}seed_${hiddenSize}hid_[getObj weightDecay]decay_[getObj totalUpdates]epoch
	
	mkdir -p ${exampleFolder}${exampleSubFolder}/output/${modelFolderParams}
        set out_trfile ${exampleFolder}${exampleSubFolder}/output/${modelFolderParams}/tr_${modelParams}.txt
        set f [open $out_trfile w]
        # useTestingSet tr_${exampleParams}
        set testResult [test -return]
        puts $testResult
        close $f
        # exec gzip -f $out_trfile

	mkdir -p ${exampleFolder}${exampleSubFolder}/output/${modelFolderParams}/weights
        saveWeights ${exampleFolder}${exampleSubFolder}/output/${modelFolderParams}/weights/${seedVal}seed_${hiddenSize}hid_[getObj weightDecay]decay_epoch[getObj totalUpdates].wt.gz -v 3 -text
	
        # the performance on the prototype examples.
        setObj postTickProc {}
}

set modelFolder ${seedVal}seed_${hiddenSize}hid_${saveTestRuns}TestRuns_${numEpochs}UpdateEpoch_[getObj weightDecay]decay

mkdir -p ${exampleFolder}${exampleSubFolder}/output/${modelFolder}
set error_linearity_file ${exampleFolder}${exampleSubFolder}/output/${modelFolder}/error_linearity_log.txt

set err_lin_f [open $error_linearity_file w]
puts -nonewline $err_lin_f  "epoch,seed,hidden_units,error,linearity\n"
flush $err_lin_f

proc writeErrorGrad {} {
        global err_lin_f
        global seedVal
        global hiddenSize

        puts -nonewline $err_lin_f  "[getObj totalUpdates],${seedVal},${hiddenSize},[getObj error],[getObj gradientLinearity]\n"
        flush $err_lin_f
}

### FUNCTION TO TRAIN AND TEST THE NETWORK EVERY x EPOCHS
# with 500 epochs x 20, this will train for 10k epochs

proc trainIt {} {
        global err_lin_f
        global saveTestRuns
        global numEpochs
        setObj postUpdateProc {writeErrorGrad}

        set firstEpoch [expr ${numEpochs} - 50]
        steepest 50
        
        delta ${firstEpoch}
        saveTest
        

        for {set i 0} {$i < $saveTestRuns} {incr i} {
                delta ${numEpochs}
                saveTest
        }

        setObj postUpdateProc {}
}

trainIt
close $err_lin_f
exit
# steepest 50
# train -a deltaBarDelta -setOnly
# train 2950
